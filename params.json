{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A plugin manager for zsh, inspired by oh-my-zsh and vundle.","body":"# Antigen\r\n\r\nAntigen is a small set of functions that help you easily manage your shell (zsh)\r\nplugins, called bundles. The concept is pretty much the same as bundles in a\r\ntypical vim+pathogen setup. Antigen is to zsh, what [Vundle][] is to vim.\r\n\r\nPlease note that this is a very new project and can be considered beta at best.\r\nThat said, I am using antigen full time now on my work machine. Also, please\r\nread the commit comments of the changesets when you pull a new version of\r\nantigen.\r\n\r\n## Show off\r\n\r\n> Enough talk. Let's fight!\r\n>   -- Po, Kung-fu Panda.\r\n\r\nYou're going to experience antigen right in your open shell. No `.zshrc`\r\ntweaking and reading the rest of this documentation. Kinda like an ice-cream\r\nsample, if you will.\r\n\r\nGet and load antigen.\r\n\r\n    curl https://raw.github.com/zsh-users/antigen/master/antigen.zsh > antigen.zsh\r\n    source antigen.zsh\r\n\r\nThere. You now have all the antigen goodies. Let's try install some plugins. How\r\nabout some color to start with. Get the [syntax highlighting plugin][] by\r\nrunning\r\n\r\n    antigen-bundle zsh-users/zsh-syntax-highlighting\r\n\r\nNow let it do its thing and once its done and you're back at your prompt, try\r\nand type a command. See that? Colors!\r\n\r\nSo, you do git? ruby? git and ruby? There are lots of awesome plugins over at\r\noh-my-zsh. Treat yourself to some.\r\n\r\n    antigen-bundle robbyrussell/oh-my-zsh plugins/ruby\r\n    antigen-bundle robbyrussell/oh-my-zsh plugins/git\r\n\r\nThere are lots of plugins out there in the wild and people are writing zsh\r\nutilities as small scripts all the time. Antigen is compatible with all of them.\r\nThe plugins and scripts don't need any special handling to be compatible with\r\nantigen.\r\n\r\nAnother example, [kennethreitz's autoenv](autoenv). Just a bundle command away.\r\n\r\n    antigen-bundle kennethreitz/autoenv\r\n\r\nAnd boom! you have all the autoenv goodness. Just remember how you used to do\r\nthese before antigen, clone it, modify your bashrc to source it, load a new\r\nterminal, all just to test it out. Duh!\r\n\r\nThe side effect of this is that you can tell antigen to grab just about anything\r\nfrom anyone's `dotfiles` repo, as long as it is in a directory under any repo on\r\ngithub.\r\n\r\nAnd themes? How would you like a fancy new prompt for yourself?\r\n\r\n    antigen-theme funky\r\n\r\nNo? Not your taste? There are many themes available to you, check out the\r\noh-my-zsh's [page on themes][]. (You can currently only install themes from\r\nrobbyrussell's, i.e., the canonical oh-my-zsh repo).\r\n\r\nNote: Many of those plugins and especially themes, assume you have the core\r\nlibrary of oh-my-zsh loaded. So, if you want to experiment further, issue a\r\n\r\n    antigen-lib\r\n\r\nand continue until you're tired. At which point you can come back to this page\r\n;)\r\n\r\n## Usage\r\n\r\nSo, now that you're here, I'll assume you are convinced and want antigen running\r\nyour shell all the time. Sweet. Let's do it.\r\n\r\nFirst, clone this repo, probably as a submodule if you have your dotfiles in a\r\ngit repo,\r\n\r\n    git clone https://github.com/sharat87/antigen.git\r\n\r\nThe usage should be very familiar to you if you use Vundle. A typical `.zshrc`\r\nmight look like this\r\n\r\n    source /path-to-antigen-clone/antigen.zsh\r\n\r\n    # Load the oh-my-zsh's library.\r\n    antigen-lib\r\n\r\n    # Bundles from the default repo (robbyrussell's oh-my-zsh).\r\n    antigen-bundle git\r\n    antigen-bundle heroku\r\n    antigen-bundle pip\r\n    antigen-bundle lein\r\n    antigen-bundle command-not-found\r\n\r\n    # Syntax highlighting bundle.\r\n    antigen-bundle zsh-users/zsh-syntax-highlighting\r\n\r\n    # Load the theme.\r\n    antigen-theme robbyrussell\r\n\r\n    # Tell antigen that you're done.\r\n    antigen-apply\r\n\r\nOpen your zsh with this zshrc and you should see all the bundles you defined\r\nhere, getting installed. Once its done, you are ready to roll. The complete\r\nsyntax for the `antigen-bundle` command is discussed further down on this page.\r\n\r\n## Motivation\r\n\r\nIf you use zsh and [oh-my-zsh][], you know that having many different plugins\r\nthat are developed by many different authors in a single (sub)repo is not a very\r\neasy to maintain. There are some really fantastic plugins and utilities in\r\noh-my-zsh, but having them all in a single repo doesn't really scale well. And I\r\nadmire robbyrussell's efforts for reviewing and merging the gigantic number of\r\npull requests the project gets. It needs a better way of plugin management.\r\n\r\nThis was discussed on [a][1] [few][2] [issues][3], but it doesn't look like\r\nthere was any progress made. So, I'm trying to start this off with antigen,\r\nhoping to better this situation. Please note that I'm by no means a zsh or any\r\nshell script expert (far from it).\r\n\r\n[1]: https://github.com/robbyrussell/oh-my-zsh/issues/465\r\n[2]: https://github.com/robbyrussell/oh-my-zsh/issues/377\r\n[3]: https://github.com/robbyrussell/oh-my-zsh/issues/1014\r\n\r\nInspired by vundle, antigen can pull oh-my-zsh style plugins from various github\r\nrepositories. You are not limited to use plugins from the oh-my-zsh repository\r\nonly and you don't need to maintain your own fork and pull from upstream every\r\nnow and then.\r\n\r\nAntigen also lets you switch the prompt theme with one command, just like that\r\n\r\n    bundle-theme candy\r\n\r\nand your prompt is changed, just for this session of course.\r\n\r\n## Commands\r\n\r\nThe following are the commands provided by antigen. Note that the `-` in the\r\nfollowing commands is kind of optional. You can write `antigen-bundle ...` as\r\n`antigen bundle` and get away with it. For more details see the help on\r\n`antigen` command further down in this section.\r\n\r\n### antigen-bundle\r\n\r\nThis command tells antigen to install (if not already installed) and load the\r\ngiven plugin. The simplest usage follows the following syntax.\r\n\r\n    antigen-bundle <plugin-name>\r\n\r\nThis will install the `plugins/<name>` directory from [robbyrussell's\r\noh-my-zsh][oh-my-zsh] (can be changed by setting `ANTIGEN_DEFAULT_REPO_URL`).\r\n\r\nHowever, the above is just syntax sugar for the extended syntax of the\r\n`antigen-bundle` command.\r\n\r\n    antigen-bundle [<url> [<loc>]]\r\n\r\nwhere `<url>` is the repository url and it defaults to [robbyrussell's\r\noh-my-zsh][oh-my-zsh] repo (can be changed by setting `ANTIGEN_DEFAULT_REPO_URL`\r\ndiscussed further down). `<loc>` is the path under this repository which has the\r\nzsh plugin. This is typically the directory that contains a `*.plugin.zsh` file,\r\nbut it could contain a completion file or just many `*.zsh` files to be sourced.\r\n`<loc>` defaults to `/`, which indicates the repository itself is a plugin.\r\n\r\nAn example invocation would be\r\n\r\n    # The following is the same as `antigen-bundle ant`. But for demonstration\r\n    # purposes, we use the extended syntax here.\r\n    antigen-bundle https://github.com/robbyrussell/oh-my-zsh.git plugins/ant\r\n\r\nThis would install the ant plugin from robbyrussell's oh-my-zsh repo. Of course,\r\ngithub url's can be shortened.\r\n\r\n    antigen-bundle robbyrussell/oh-my-zsh plugins/ant\r\n\r\nAnd since this repo is the default, even that isn't necessary. But we can't\r\nspecify the `loc` without giving the first argument.\r\n\r\nFor this and a few other reasons, `antigen-bundle` also supports a simple\r\nkeyword argument syntax, using which we can rewrite the above as\r\n\r\n    antigen-bundle --loc=plugins/ant\r\n\r\nWhich picks up the default for the `url` argument, and uses the `loc` given to\r\nit.\r\n\r\n*Note* that you can mix and match positional and keyword arguments. But you\r\ncan't have positional arguments after keyword arguments.\r\n\r\n    antigen-bundle robbyrussell/oh-my-zsh --loc=plugins/ant\r\n\r\nAnd keyword arguments don't care about the order in which the arguments are\r\nspecified. The following is perfectly valid.\r\n\r\n    antigen-bundle --loc=plugins/ant --url=robbyrussell/oh-my-zsh\r\n\r\nIn addition to the above discussed arguments, `antigen-bundle` also takes a\r\n`btype` keyword-only argument, that is used internally. You shouldn't be\r\nconcerned with this argument, its only used internally and will probably go away\r\nin the future.  It indicates whether the bundle is a theme or a simple plugin.\r\n\r\nYou can use this `antigen-bundle` command not just from your `.zshrc`, but also\r\nfrom your shell environment. This allows you to install plugins on the fly and\r\ntry them out. Of course if you want a bundle to be available every time you open\r\na shell, put it in your `.zshrc`.\r\n\r\nOther keyword-only arguments accepted:\r\n\r\n`--branch={git-branch-name}` &mdash; Specify the branch of the git repo to be\r\nused for this bundle (without the braces of course). The default is whatever\r\nbranch the clone comes with, which is usually `master`. For example,\r\n\r\n    antigen-bundle github-user/repo --branch=develop\r\n\r\nThis will get the plugin as in the branch `develop`.\r\n\r\nNote that if you specify two plugins to be loaded from the same git repo, but\r\ndifferent branches, then two separate clones of this repo will be maintained.\r\nThis is a small implementation detail and shouldn't influence you in any way.\r\n\r\n`--no-local-clone` &mdash; This command can be useful if you are developing a\r\nplugin and already have a clone on your local file system. If this argument is\r\nnot given, even if the given repo url is a local path, a clone is made in the\r\n`$ADOTDIR/repos`, and the plugin is loaded from that clone. But, if you give\r\nthis argument, the plugin is sourced straight from the repo location, without\r\ncreating a clone. For example,\r\n\r\n    antigen-bundle /absolute/path/to/the/plugin --no-local-clone\r\n\r\nNote that if the repo url is *not* an absolute local path, this argument has no\r\neffect.\r\n\r\n### antigen-bundles\r\n\r\nIf you have a fair number of bundles, using the `antigen-bundle` command can\r\nlook cumbersome. You can use the `antigen-bundles` command to *bulk* define\r\nbundles instead of individual calls to `antigen-bundle`.\r\n\r\nUsage is pretty straightforward. Just pipe the bundle specifications, just as\r\nyou would give to the `antigen-bundle` command, one per line, into the\r\n`antigen-bundles` command. The easiest way to do this, is using the heredoc\r\nsyntax.\r\n\r\n    antigen-bundles <<EOF\r\n    # Guess what to install when running an unknown command.\r\n    command-not-found\r\n\r\n    # The heroku tool helper plugin.\r\n    heroku\r\n\r\n    EOF\r\n\r\nThis is equivalent to\r\n\r\n    antigen-bundle command-not-found\r\n    antigen-bundle heroku\r\n\r\nOf course, as you can see, from the lines piped to `antigen-bundles`, empty\r\nlines and those starting with a `#` are ignored. The rest are passed to\r\n`antigen-bundle` without any quoting rules applied. They are actually `eval`-ed\r\nwith the `antigen-bundle` command. See the source if you want to really\r\nunderstand how it works. Its a very small function.\r\n\r\n### antigen-update\r\n\r\nThis is something you might not want to put in your `.zshrc`. Instead, run it\r\noccasionally to update all your plugins. It doesn't take any arguments.\r\n\r\n    antigen-update\r\n\r\nPlease note that the updates that are downloaded are not immediately available.\r\nYou have to open a new shell to be able to see the changes. This is a limitation\r\nby design since reloading all the plugins *might* have some nasty side effects\r\nthat may not be immediately apparent. Let's just say it can make your shell act\r\nreal quirky.\r\n\r\n**Please note**: This command is not for updating *antigen* itself. Its for\r\nupdating the bundles you are using with antigen.\r\n\r\n### antigen-list\r\n\r\nUse this command to list out the currently *loaded* plugins. Keep in mind that\r\nthis includes any bundles installed on-the-fly.\r\n\r\nTakes no arguments. Gives out the repo url and the plugin's location under the\r\nrepo.\r\n\r\n### antigen-cleanup\r\n\r\nUsed to clean up the clones of repos which are not used by any plugins. It takes\r\nno arguments. When this is run, it lists out the repo-clones that are available\r\nbut are not used by any plugin *currently loaded*.\r\n\r\nThis command, by default asks for confirmation before deleting the unused\r\nclones. If the `--force` argument is given, then this confirmation is not asked.\r\nIt straight away deletes all the unused clones. This option makes this command\r\nusable in a non-interactive fashion.\r\n\r\n### antigen-lib\r\n\r\nThis is a shortcut to\r\n\r\n    antigen-bundle --loc=lib\r\n\r\nSo, it basically installs the oh-my-zsh's library as a bundle. Please note that\r\nthis assumes that the `ANTIGEN_DEFAULT_REPO_URL` is set to the oh-my-zsh repo or\r\na fork of that repo. If you want to specify the `url` too, then you can't use\r\nthe `antigen-lib` short cut. You have to do that directly with the\r\n`antigen-bundle` command.\r\n\r\nThis is present only for legacy reasons and *might* (or might not) be removed in\r\nthe future.\r\n\r\nUse\r\n\r\n    antigen-lib\r\n\r\nin  your `.zshrc`, before any `antigen-bundle` declarations. It takes no\r\narguments.\r\n\r\n### antigen-theme\r\n\r\nUsed for switching the prompt theme. Invoke it with the name of the theme you\r\nwant to use.\r\n\r\n    antigen-theme fox\r\n\r\nCurrently, themes are pulled from robbyrussell's oh-my-zsh repo, but it will\r\nsupport getting themes from other repos as well in the future.\r\n\r\nYou can use this command to change your theme on the fly in your shell. Go on,\r\ntry out a few themes in your shell before you set it in your `.zshrc`.\r\n\r\n### antigen-apply\r\n\r\nYou have to add this command after defining all bundles you need, in your zshrc.\r\nThe completions defined by your bundles will be loaded at this step.\r\n\r\nIt is possible to load completions as and when a bundle is specified with the\r\nbundle command, in which case this command would not be necessary. But loading\r\nthe completions is a time-consuming process and your shell will start noticeably\r\nslow if you have a good number of bundle specifications.\r\n\r\nHowever, if you're a zsh expert and can suggest a way so that this would not be\r\nnecessary, I am very interested in discussing it. Please open up an issue with\r\nyour details. Thanks.\r\n\r\n### antigen-help\r\n\r\nThis exists so that there can be some help right in the command line. Currently\r\nit doesn't provide much help other than redirecting you to the project page for\r\ndocumentation. It is intended to provide more meaning and sub-command specific\r\nhelp in the future.\r\n\r\nI could use some help here as I'm not that good at writing documentation that\r\nlooks good as output on the command line.\r\n\r\n### antigen\r\n\r\nThis is a parent command that mainly exists for convenience. The idea is the\r\nfollowing two are the same.\r\n\r\n    antigen-list\r\n    antigen list\r\n\r\nand\r\n\r\n    antigen-help\r\n    antigen help\r\n\r\nBecause of this, we can create aliases like\r\n\r\n    alias a=antigen\r\n    alias an=antigen\r\n\r\nand run the antigen commands without making them look annoyingly long.\r\n\r\n    a bundle ruby\r\n    a theme candy\r\n    a list\r\n\r\nAnd even...\r\n\r\n    an update\r\n\r\n## Configuration\r\n\r\nThe following environment variables can be set to customize the behavior of\r\nantigen. Make sure you set them *before* source-ing `antigen.zsh`.\r\n\r\n`ANTIGEN_DEFAULT_REPO_URL` &mdash; This is the default repository url that is\r\nused for `bundle` commands. The default value is robbyrussell's oh-my-zsh repo,\r\nbut you can set this to the fork url of your own fork.\r\n\r\n`ADOTDIR` &mdash; This directory is used to store all the repo clones, your\r\nbundles, themes, caches and everything else antigen requires to run smoothly.\r\nDefaults to `$HOME/.antigen`.\r\n\r\n**Note**: `ANTIGEN_REPO_CACHE` & `ANTIGEN_BUNDLE_DIR` &mdash; These variables\r\nwere used previously but are now removed. Please use `ADOTDIR` instead, as\r\nmentioned above.\r\n\r\n## Running the tests\r\n\r\nAll the tests are in the `tests` folder and are run using the [cram]() test\r\nsystem.  Once you have cram installed, you can run the tests as\r\n\r\n    make\r\n\r\nor\r\n\r\n    make tests\r\n\r\nIf you are making a feature addition, I'd really appreciate if you can add a\r\ntest for your feature. Even if you can add a test for an existing feature, that\r\nwould be great as the tests are currently seriously lagging behind the full\r\nfunctionality of antigen.\r\n\r\n## Notes on writing plugins\r\n\r\nIf you are just going to write a single `.sh` file with the goodness you want to\r\ncreate, just forget about this and go do that. Antigen will work just find with\r\nsuch a plugin.\r\n\r\nIf you want to know how antigen loads the plugins, do continue.\r\n\r\nFirstly, antigen looks for a `*.plugin.zsh` file in the plugin directory. If\r\npresent, it will source *only* this script. Nothing else is sourced.\r\n\r\nOtherwise, it looks for `*.zsh` files and if there are any, *all* of them are\r\nsourced. The order in which they are sourced is not currently defined. Please\r\ndon't rely on this order. Nothing else is sourced after all the `*.zsh` scripts.\r\n\r\nIf no `*.zsh` files are present, it finally looks for any `*.sh` files and\r\nsources *all* of them. Again, the order in which they are sourced in not\r\ncurrently defined.\r\n\r\nNo matter which (or none) of the above happen to be sourced, this plugin\r\ndirectory is added to the zsh's function path (`$fpath`) so that any completions\r\nin it are loaded. One exception to this rule is that if this plugin is a prompt\r\ntheme. In which case the theme script is just sourced and nothing else is done.\r\n\r\n## Meta\r\n\r\n### Helping out\r\n\r\nAntigen is licensed with the [MIT License][license]. To contribute, just fork,\r\nmake changes and send a pull request. If its a rather long/complicated change,\r\nplease consider opening an [issue][] first so we can discuss it out.\r\n\r\n### Feedback please\r\n\r\nAny comments/suggestions/feedback welcome. Please join the discussion on the\r\n[reddit page][] of this project. Also, follow me on twitter,\r\n[@sharat87](twitter).\r\n\r\n[Vundle]: https://github.com/gmarik/vundle\r\n[page on themes]: https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\n[syntax highlighting plugin]: https://github.com/zsh-users/zsh-syntax-highlighting\r\n[autoenv]: https://github.com/kennethreitz/autoenv\r\n[oh-my-zsh]: https://github.com/robbyrussell/oh-my-zsh\r\n[cram]: https://bitheap.org/cram/\r\n[issue]: https://github.com/sharat87/antigen/issues\r\n[license]: http://mit.sharats.me\r\n[reddit page]: http://www.reddit.com/r/commandline/comments/u4f26/antigen_a_plugin_manager_for_zsh_shell/\r\n[twitter]: http://twitter.com/sharat87\r\n","name":"Antigen","google":"UA-32559609-1"}